#!/bin/bash

# Check if GNU Stow is installed
if ! command -v stow &> /dev/null; then
    echo "Error: GNU Stow is not installed. Please install it and try again."
    exit 1
fi

# Define the target and dotfiles directory
DOTFILES_DIR="$HOME/conf/dotfiles"
TARGET_DIR="$HOME"

# Function to display help
function show_help {
    cat << EOF
Usage: jbe-stow <command> [arguments]

Manage dotfiles using GNU Stow

Commands:
  apply              Apply the dotfiles using GNU Stow
  add <file>...      Add specified files or directories to \$HOME/conf/dotfiles, replacing with symlink
  help               Display this help message
EOF
}

# Function to apply the dotfiles
function apply_dotfiles {
    cd "$DOTFILES_DIR"
    stow --target="$TARGET_DIR" .
}

# Function to add files or directories
function add_files {
    if [ $# -eq 0 ]; then
        echo "Error: No files or directories specified."
        echo "Usage: jbe-stow add <file>..."
        exit 1
    fi

    for item in "$@"; do
        if [ ! -e "$item" ]; then
            echo "Error: '$item' does not exist."
            continue
        fi

        if [[ "$item" != "$HOME/"* ]]; then
            echo "Error: '$item' is outside of the \$HOME directory. Only files inside \$HOME are allowed."
            continue
        fi

        # Calculate relative path
        relative_path="${item#$HOME/}"

        # Destination path in dotfiles directory
        dest_path="$DOTFILES_DIR/$relative_path"

        # Create target directory if it doesn't exist
        mkdir -p "$(dirname "$dest_path")"

        # Move the file or directory
        if mv "$item" "$dest_path"; then
            apply_dotfiles
            echo "Moved '$item' to '$dest_path' and updated symlinks."
        else
            echo "Error: Failed to move '$item' to '$dest_path'. Check permissions or conflicts."
        fi
    done
}

# Main script logic
case "$1" in
    apply)
        apply_dotfiles
        ;;
    add)
        shift
        add_files "$@"
        ;;
    help|--help|-h|"?")
        show_help
        ;;
    *)
        echo "Error: Unknown command '$1'."
        show_help
        exit 1
        ;;
esac

